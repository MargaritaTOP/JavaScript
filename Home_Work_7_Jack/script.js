const text = `Вот дом,

Который построил Джек.

А это пшеница,

Которая в тёмном чулане хранится

В доме,

Который построил Джек.

А это весёлая птица-синица,

Которая часто ворует пшеницу,

Которая в тёмном чулане хранится

В доме,

Который построил Джек.

Вот кот,

Который пугает и ловит синицу,

Которая часто ворует пшеницу,

Которая в тёмном чулане хранится

В доме,

Который построил Джек.

Вот пёс без хвоста,

Который за шиворот треплет кота,

Который пугает и ловит синицу,

Которая часто ворует пшеницу,

Которая в тёмном чулане хранится

В доме,

Который построил Джек.

А это корова безрогая,

Лягнувшая старого пса без хвоста,

Который за шиворот треплет кота,

Который пугает и ловит синицу,

Которая часто ворует пшеницу,

Которая в тёмном чулане хранится

В доме,

Который построил Джек.

А это старушка, седая и строгая,

Которая доит корову безрогую,

Лягнувшую старого пса без хвosta,

Который за шиворот треплет кота,

Который пугает и ловит синицу,

Которая часто ворует пшеницу,

Которая в тёмном чулане хранится

В доме,

Который построил Джек.

А это ленивый и толстый пастух,

Который бранится с коровницей строгою,

Которая доит корову безрогую,

Лягнувшую старого пса без хвоста,

Который за шиворот треплет кота,

Который пугает и ловит синицу,

Которая часто ворует пшеницу,

Которая в тёмном чулане хранится

В доме,

Который построил Джек.

Вот два петуха,

Которые будят того пастуха,

Который бранится с коровницей строгою,

Которая доит корову безрогую,

Лягнувшую старого пса без хвоста,

Который за шиворот треплет кота,

Который пугает и ловит синицу,

Которая часто ворует пшеницу,

Которая в тёмном чулане хранится

В доме,

Который построил Джек`;

// Регистрируем обработчик события, который срабатывает, когда DOM полностью загружен
document.addEventListener('DOMContentLoaded', () => {

    // Выводим текст, хранящийся в переменной `text`, в элемент с id="text"
    document.getElementById('text').textContent = text;

    // Создаём массив слов из текста, обрабатывая его следующим образом:
    const words = text
        // Заменяем все запятые, точки и переносы строк пробелами с помощью регулярного выражения
        .replace(/[,.\n]/g, ' ')
        // Приводим весь текст к нижнему регистру для единообразия
        .toLowerCase()
        // Разбиваем текст на массив слов, используя пробелы как разделитель
        .split(/\s+/)
        // Фильтруем массив, удаляя пустые строки (элементы с длиной 0)
        .filter(word => word.length > 0);

    // Устанавливаем общее количество слов (длина массива `words`) в элемент с id="wordCount"
    document.getElementById('wordCount').textContent = words.length;

    // Создаём новый объект Map для хранения частоты слов
    const wordFrequency = new Map();

    // Перебираем массив слов и подсчитывает частоту каждого слова
    words.forEach(word => {
        // Для каждого слова: если слово уже есть в Map, увеличиваем его счётчик на 1,
        // если нет — устанавливаем счётчик в 1 (используя || 0 для начального значения)
        wordFrequency.set(word, (wordFrequency.get(word) || 0) + 1);
    });

    // Преобразуем Map в массив пар [слово, частота] и сортируем его
    const sortedWords = Array.from(wordFrequency.entries())
        // Сортируем по убыванию частоты (b[1] - a[1]); если частоты равны,
        // сортируем по алфавиту с помощью localeCompare
        .sort((a, b) => b[1] - a[1] || a[0].localeCompare(b[0]));

    // Получаем тело таблицы (элемент с id="frequencyTable") для добавления строк
    const tableBody = document.getElementById('frequencyTable');

    // Перебираем отсортированный массив слов и их частот
    sortedWords.forEach(([word, count]) => {
        // Создаём новый элемент строки таблицы (<tr>)
        const row = document.createElement('tr');
        // Заполняем строку HTML-кодом с двумя ячейками: слово и его частота
        row.innerHTML = `<td>${word}</td><td>${count}</td>`;
        // Добавляем созданную строку в тело таблицы
        tableBody.appendChild(row);
    });

});